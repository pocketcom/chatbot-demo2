{"version":3,"sources":["assets/img/no-profile.png","assets/img/torahack.png","components/AnswersList.jsx","components/Answer.jsx","components/Chats.jsx","components/Chat.jsx","components/Forms/TextInput.jsx","components/Forms/FormDialog.jsx","firebase/config.js","firebase/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","AnswersList","props","className","answers","map","value","index","content","nextId","key","toString","select","useStyles","makeStyles","createStyles","borderColor","color","fontWeight","marginButtom","backgroundColor","Answer","classes","Button","button","variant","onClick","height","padding","overflow","Chats","List","chats","id","chat","text","type","Chat","isQuestion","ListItem","ListItemAvatar","Avatar","alt","src","Torahack","Noprofile","TextInput","TextField","fullWidth","label","margin","multiline","rows","onChange","TodoList","inputName","event","setState","name","target","inputEmail","email","inputDescription","description","submitForm","payload","state","fetch","method","body","JSON","stringify","then","alert","handleClose","bind","Dialog","open","this","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","React","Component","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","db","firestore","App","displayNextQuestion","nextQuestionId","push","dataset","question","currentId","selectAnswer","selectedAnswer","setTimeout","handleClickOpen","test","a","document","createElement","href","click","initDataset","collection","get","snapshots","forEach","doc","data","scrollArea","getElementById","scrollTop","scrollHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02617399.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-profile.a990286c.png\";","module.exports = __webpack_public_path__ + \"static/media/torahack.c0c5b670.png\";","import React from 'react';\nimport {Answer} from \"./index\";\n\nconst AnswersList=(props)=>{\n  return(\n      <div className=\"c-grid__answer\">\n        {props.answers.map((value,index)=>{\n          return <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={props.select}/>\n        })}\n\n      </div>\n\n  )\n}\n\nexport default AnswersList\n","import React from 'react';\nimport { makeStyles,createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n      \"button\":{\n        borderColor:\"#FFB549\",\n        color:\"#FFB549\",\n        fontWeight:600,\n        marginButtom:\"8px\",\n        \"&:hover\":{\n          backgroundColor:\"#FFB549\",\n          color:\"#fff\",\n\n        }\n      }\n    })\n));\n\nconst Answer=(props)=>{\n//const classes = useStyles\nconst classes=useStyles();\n\n  return(\n    <Button className={classes.button}\n      variant=\"outlined\" onClick={()=>props.select(props.content,props.nextId)}>\n{props.content}\n</Button>\n  )\n}\nexport default Answer\n","import React from 'react';\nimport { makeStyles ,createStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport{Chat} from \"./index\";\n\n\nconst useStyles = makeStyles(() => (\ncreateStyles({\n  \"chats\":{\n    height:400,\n    padding:\"0\",\n    overflow:\"auto\",\n\n  }\n})\n\n));\n\nconst Chats=(props)=>{\n  const classes=useStyles();\n  return(\n    <List className={classes.chats} id={\"scroll-area\"}>\n        {props.chats.map((chat,index)=>{\n        return  <Chat text={chat.text} type={chat.type} key={index.toString()}/>\n        })}\n\n          </List>\n\n    )\n}\nexport default Chats\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n// import Typography from '@material-ui/core/Typography';\nimport Noprofile from '../assets/img/no-profile.png';\nimport Torahack from '../assets/img/torahack.png';\n\nconst Chat =(props)=>{\nconst isQuestion=(props.type==='question');\nconst classes=isQuestion ? 'p-chat__row':'p-chat__reverse'\n\nreturn(\n  <ListItem className={classes}>\n    <ListItemAvatar>\n      {isQuestion ?(\n        <Avatar alt=\"icon\" src={Torahack}/>\n      ):(\n        <Avatar alt=\"icon\" src={Noprofile}/>\n      )}\n    </ListItemAvatar>\n    <div className=\"p-chat__bubble\">{props.text}</div>\n  </ListItem>\n)\n\n}\nexport default Chat\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput=(props)=>{\n  return(\n     <TextField\n            fullWidth={true}\n            label={props.label}\n            margin={\"dense\"}\n            multiline={props.multiline}\n            rows={props.rows}\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n                />\n  )\n}\nexport default TextInput\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './TextInput'\n\nexport default class TodoList extends React.Component{\n constructor(props){\n  super(props);\n  this.state={\n    name:\"\",\n    email:\"\",\n    description:\"\"\n  }\n  this.inputName=this.inputName.bind(this)\n  this.inputEmail=this.inputEmail.bind(this)\n  this.inputDescription=this.inputDescription.bind(this)\n\n\n}\ninputName=(event)=>{\n  this.setState({name:event.target.value})\n}\ninputEmail=(event)=>{\n  this.setState({email:event.target.value})\n}\ninputDescription=(event)=>{\n  this.setState({description:event.target.value})\n}\nsubmitForm=()=>{\n  const name=this.state.name\n  const email=this.state.email\n  const description=this.state.description\n\nconst payload={\n  text:'お問い合わせがありました\\n'+\n        'お名前'+name+'\\n'+\n        'Email'+email+'\\n'+\n        '内容:\\n'+description\n}\n  const url=\"https://hooks.slack.com/services/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\"\n\n  fetch(url,{\n    method:'POST',\n    body:JSON.stringify(payload)\n  }).then(()=>{\n    alert('送信が完了しました！')\n    this.setState({\n      name:\"\",\n      email:\"\",\n      description:\"\"\n    })\n    return this.props.handleClose()\n  })\n}\n\n\n\n  render(){\n    return(\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">お問い合わせフォーム</DialogTitle>\n        <DialogContent>\n            <TextInput\n            label={\"お名前（必須）\"} multiline={false} rows={1}\n            value={this.state.name} type={\"text\"} onChange={this.inputName}\n            />\n            <TextInput\n            label={\"メールアドレス（必須）\"} multiline={false} rows={1}\n            value={this.state.email} type={\"email\"} onChange={this.inputEmail}\n            />\n            <TextInput\n            label={\"お問い合わせ内容（必須)\"} multiline={true} rows={5}\n            value={this.state.description} type={\"text\"} onChange={this.inputDescription}\n            />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.handleClose} color=\"primary\">\n            キャンセル\n          </Button>\n          <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n            送信する\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n\n    )\n  }\n}\n","const firebaseConfig = {\n  apiKey: \"AIzaSyCSbLeiF21B00LylCBmykkeszFGKi2YMkE\",\n  authDomain: \"chatbot-demo-52fcb.firebaseapp.com\",\n  databaseURL: \"https://chatbot-demo-52fcb.firebaseio.com\",\n  projectId: \"chatbot-demo-52fcb\",\n  storageBucket: \"chatbot-demo-52fcb.appspot.com\",\n  messagingSenderId: \"653821986876\",\n  appId: \"1:653821986876:web:34f1bf94fbfddd92a89b39\",\n  measurementId: \"G-BJMH6ZF94C\"\n};\n\nexport default firebaseConfig\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport firebaseConfig from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();\n","import React from 'react';\nimport './assets/styles/style.css';\nimport {AnswersList,Chats} from \"./components/index\";\nimport FormDialog from \"./components/Forms/FormDialog\";\nimport {db} from './firebase/index'\n\nexport default class App extends React.Component{\n    constructor(props){\n      super(props);\n      this.state={\n        answers:[],\n        chats:[],\n        currentId:\"init\",\n        dataset:{},\n        open:false\n      }\n      this.selectAnswer=this.selectAnswer.bind(this)\n        this.handleClickOpen=this.handleClickOpen.bind(this)\n        this.handleClose=this.handleClose.bind(this)\n\n    }\n\n    displayNextQuestion=(nextQuestionId)=>{\n      const chats=this.state.chats\n      chats.push({\n        text:this.state.dataset[nextQuestionId].question,\n        type:'question'\n      })\n\n      this.setState({\n        answers:this.state.dataset[nextQuestionId].answers,\n        chats:chats,\n        currentId:nextQuestionId\n      })\n    }\n\n    selectAnswer=(selectedAnswer,nextQuestionId)=>{\n      switch(true){\n        case(nextQuestionId === 'init'):\n            setTimeout(()=>this.displayNextQuestion(nextQuestionId),);\n            break;\n\n            case(nextQuestionId==='contact'):\n                this.handleClickOpen();\n                break;\n\n                    case(/^https:*/.test(nextQuestionId)):\n                        const a=document.createElement('a');\n                        a.href=nextQuestionId;\n                        a.target='_blank';\n                        a.click();\n                        break;\n\n\n        default:\n            const chats=this.state.chats;\n            chats.push({\n                text:selectedAnswer,\n                type:'answer'\n          })\n\n          this.setState({\n            chats:chats\n          })\n          setTimeout(()=>this.displayNextQuestion(nextQuestionId),);\n          break;\n      }\n    }\n\n    handleClickOpen = () => {\n      this.setState({open:true});\n    };\n\n    handleClose = () => {\n      this.setState({open:false});\n    };\ninitDataset=(dataset)=>{\n  this.setState({dataset:dataset})\n}\n\n    componentDidMount(){\n        (async()=>{\n          const dataset=this.state.dataset\n          await db.collection('questions').get().then(snapshots=>{\n            snapshots.forEach(doc=>{\n              const id=doc.id\n              const data=doc.data()\n              dataset[id]=data\n            })\n          })\nthis.initDataset(dataset)\nconst initAnswer=\"\";\nthis.selectAnswer(initAnswer,this.state.currentId)\n        })()\n    }\n\n    componentDidUpdate(){\n      const scrollArea=document.getElementById('scroll-area')\n\n    if(scrollArea){\n       scrollArea.scrollTop=scrollArea.scrollHeight\n    }\n}\n\n  render(){\n  return (\n    <section className=\"c-section\">\n<div className=\"c-box\">\n  <Chats chats={this.state.chats}/>\n<FormDialog handleClose={this.handleClose} open={this.state.open}/>\n<AnswersList answers={this.state.answers} select={this.selectAnswer}/>\n\n</div>\n\n    </section>\n  );\n}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}